swagger: '2.0'
info:
  title: ts api
  description: ts api
  version: 1.0.0
produces:
  - application/json
paths:
  /raw:
    get:
      tags:
        - RawData
      operationId: getRawData
      summary: get RawData
      description: get RawData
      parameters:
        - in: query
          name: interval
          type: string
          required: true
        - in: query
          name: start
          type: number
          required: true
        - in: query
          name: end
          type: number
          required: true
      responses:
        '200':
          description: get RawData
          schema:
            $ref: '#/definitions/RawDataResponse'

  /market_break_points:
    get:
      tags:
        - RawData
      operationId: getMarketBreakPoint
      summary: get Market Break Points
      description: get Market Break Points
      responses:
        '200':
          description: get Market Break Points
          schema:
            $ref: '#/definitions/MarketBreakPointResponse'

  /models:
    get:
      tags:
        - Model
      operationId: getModels
      summary: get Model list
      description: get Model list
      responses:
        '200':
          description: get Model list
          schema:
            $ref: '#/definitions/Model'
    post:
      tags:
        - Model
      operationId: setModel
      summary: add or update Model
      description: add or update Model
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Model'
      responses:
        '200':
          description: add or update Model success

  /sample_types:
    get:
      tags:
        - Model
      operationId: getSampleTypes
      summary: get sample type list
      description: get sample type list
      responses:
        '200':
          description: get sample type list
          schema:
            $ref: '#/definitions/SampleTypes'

  /samples:
    get:
      tags:
        - Sample
      operationId: getSamples
      summary: get Sample list
      description: get Sample list
      responses:
        '200':
          description: get Sample list
          schema:
            $ref: '#/definitions/SamplesResponse'

    post:
      tags:
        - Sample
      operationId: setSamples
      summary: add or update sample
      description: add or update sample
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SamplesRequest'
      responses:
        '200':
          description: add or update sample success

  /dataset:
    get:
      tags:
        - Sample
      operationId: getDataSets
      summary: get data set
      description: get data set
      responses:
        '200':
          description: get data set
          schema:
            $ref: '#/definitions/DataSetResponse'

    post:
      tags:
        - Sample
      operationId: setDataSet
      summary: add or update data set
      description: add or update data set
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DataSet'
      responses:
        '200':
          description: add or update data set success

definitions:

  RawDataResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/RawData'
      query_string:
        type: string

  RawData:
    type: object
    properties:
      timestamp:
        type: integer
      open:
        type: number
      high:
        type: number
      low:
        type: number
      close:
        type: number
      volume:
        type: number

  MarketBreakPointResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/MarketBreakPoint'
      query_string:
        type: string

  MarketBreakPoint:
    type: object
    properties:
      timestamp:
        type: string

  Model:
    type: object
    properties:
      model:
        type: string
      description:
        type: string
      params:
        type: string

  SampleTypes:
    type: object
    properties:
      type:
        type: string
      description:
        type: string

  SamplesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Samples'
      query_string:
        type: string

  SamplesRequest:
    type: array
    items:
      $ref: '#/definitions/Samples'

  Samples:
    type: object
    properties:
      uid:
        type: string
      sample_data:
        type: array
        items:
          $ref: '#/definitions/RawData'
      value:
        type: number
      extra_data:
        type: array
        items:
          $ref: '#/definitions/RawData'

  DataSetResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/DataSet'
      query_string:
        type: string

  DataSet:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      uid_from:
        type: string
      uid_to:
        type: string