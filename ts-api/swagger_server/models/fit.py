# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.data_set import DataSet  # noqa: F401,E501
from swagger_server import util


class Fit(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: float=None, data_set: DataSet=None, started: str=None, finished: str=None, status: str=None):  # noqa: E501
        """Fit - a model defined in Swagger

        :param id: The id of this Fit.  # noqa: E501
        :type id: float
        :param data_set: The data_set of this Fit.  # noqa: E501
        :type data_set: DataSet
        :param started: The started of this Fit.  # noqa: E501
        :type started: str
        :param finished: The finished of this Fit.  # noqa: E501
        :type finished: str
        :param status: The status of this Fit.  # noqa: E501
        :type status: str
        """
        self.swagger_types = {
            'id': float,
            'data_set': DataSet,
            'started': str,
            'finished': str,
            'status': str
        }

        self.attribute_map = {
            'id': 'id',
            'data_set': 'dataSet',
            'started': 'started',
            'finished': 'finished',
            'status': 'status'
        }
        self._id = id
        self._data_set = data_set
        self._started = started
        self._finished = finished
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'Fit':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Fit of this Fit.  # noqa: E501
        :rtype: Fit
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> float:
        """Gets the id of this Fit.


        :return: The id of this Fit.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id: float):
        """Sets the id of this Fit.


        :param id: The id of this Fit.
        :type id: float
        """

        self._id = id

    @property
    def data_set(self) -> DataSet:
        """Gets the data_set of this Fit.


        :return: The data_set of this Fit.
        :rtype: DataSet
        """
        return self._data_set

    @data_set.setter
    def data_set(self, data_set: DataSet):
        """Sets the data_set of this Fit.


        :param data_set: The data_set of this Fit.
        :type data_set: DataSet
        """

        self._data_set = data_set

    @property
    def started(self) -> str:
        """Gets the started of this Fit.


        :return: The started of this Fit.
        :rtype: str
        """
        return self._started

    @started.setter
    def started(self, started: str):
        """Sets the started of this Fit.


        :param started: The started of this Fit.
        :type started: str
        """

        self._started = started

    @property
    def finished(self) -> str:
        """Gets the finished of this Fit.


        :return: The finished of this Fit.
        :rtype: str
        """
        return self._finished

    @finished.setter
    def finished(self, finished: str):
        """Sets the finished of this Fit.


        :param finished: The finished of this Fit.
        :type finished: str
        """

        self._finished = finished

    @property
    def status(self) -> str:
        """Gets the status of this Fit.


        :return: The status of this Fit.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this Fit.


        :param status: The status of this Fit.
        :type status: str
        """

        self._status = status
